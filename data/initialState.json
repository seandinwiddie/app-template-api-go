{
  "bddTests": [
    {
      "id": "1",
      "Feature": "Data Flow",
      "Scenario": "the app loads",
      "When": "the data is fetched from the initialState.json file through the api slice using RTK Query, automatically cached in the Redux store",
      "Then": "components access this data through their respective slices. Actions are dispatched for user interactions, with reducers updating the store accordingly",
      "Given": "a user is loads the app"
    }
  ],
  "brandName": "Portfolio.sdin.dev",
  "description": "Expo Go and RTK Developer",
  "iniTheme": "mirage",
  "portfolioFeatures": [
    {
      "id": "1",
      "title": "Redux Web and Native Application Development",
      "description": "I develop custom Redux web and native applications using the latest Expo and React Native technologies. I use RTK Query for data fetching and Redux Toolkit for state management."
    },
    {
      "id": "2",
      "title": "UX and UI Development",
      "description": "I develop custom UX and UI designs for web and mobile applications."
    }
  ],
  "appProcedures": [
    {
      "id": "1",
      "title": "Data Flow and Logic",
      "description": "No hardcoded data is to live in component or slice files. Data is fetched from the API and stored in the Redux store. The data is then used by the components through their respective slices and reducers."
    },
    {
      "id": "2",
      "title": "Theming",
      "description": "The application supports dynamic theming through CSS files."
    }
  ]
}
